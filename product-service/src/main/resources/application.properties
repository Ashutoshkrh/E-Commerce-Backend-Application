# --- Server Port Configuration ---
# We use 8081 to avoid conflict with the User Service (which uses 8080)
server.port=8081

# --- Application Name ---
spring.application.name=product-service

# --- PostgreSQL Database Configuration ---
# IMPORTANT: This MUST be a different database from the user service.
spring.datasource.url=jdbc:postgresql://localhost:5432/product_db
spring.datasource.username=postgres
# IMPORTANT: Replace "your_password" with your actual PostgreSQL password.
spring.datasource.password=postgres@sql

# --- JPA/Hibernate Configuration ---
# "update" will automatically create/update tables based on your @Entity classes.
spring.jpa.hibernate.ddl-auto=update
# "true" will print the executed SQL queries to the console, which is useful for debugging.
spring.jpa.show-sql=true
# Specifies the SQL dialect for PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Eureka Client Configuration ---
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Register with Eureka using the service's IP address, not its hostname
eureka.instance.prefer-ip-address=true
